[supervisord]
nodaemon=true ; Run supervisord in the foreground, required for Docker

[program:xrce_agent]
command=/bin/bash -c "source /opt/ros/foxy/setup.bash && source /root/AutoDrone/ws_docker_drone_comms/install/setup.bash && export ROS_DOMAIN_ID=0 && MicroXRCEAgent udp4 -p 8888"
autostart=true
autorestart=true
stdout_logfile=/dev/stdout ; Redirect stdout to supervisord's stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr ; Redirect stderr to supervisord's stderr
stderr_logfile_maxbytes=0

[program:px4_gazebo]
command=/bin/bash -c "source /opt/ros/foxy/setup.bash && cd /root/PX4-Autopilot && export ROS_DOMAIN_ID=0 && HEADLESS=1 make px4_sitl gazebo-classic_iris_opt_flow__baylands"
autostart=true
autorestart=true ; Or set to false/unexpected if you don't want it to restart on exit
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
stopwaitsecs=30 ; Give Gazebo/PX4 time to shut down gracefully

;Open a terminal to run python scripts
;[program:terminal]
;command=/bin/bash -c "source /opt/ros/foxy/setup.bash && source /root/AutoDrone/ws_docker_drone_comms/install/setup.bash && exec bash"
;autostart=true ; Start this automatically
;autorestart=false ; Don't restart this automatically
;stdout_logfile=/root/logs.txt
;stdout_logfile_maxbytes=0
;stderr_logfile=/root/logs.txt
;stderr_logfile_maxbytes=0
;stopwaitsecs=30 ; Give the terminal time to shut down gracefully


;[program:rl_training]
;command=python3 /path/to/your/px4_drone_env_script.py ; Replace with the actual path to your main training script
;autostart=true
;autorestart=false ; Usually, you don't want the training script to restart automatically if it finishes or crashes
;stdout_logfile=/dev/stdout
;stdout_logfile_maxbytes=0
;stderr_logfile=/dev/stderr
;stderr_logfile_maxbytes=0
;stopsignal=INT ; Send SIGINT (Ctrl+C) on stop, which your Python script might catch for cleanup